language: python
python:
  - 2.7
sudo: false

env:
 - CONDA_COMMAND='conda install -q --yes -c conda-forge gdal=2.1.2 numpy=1.11.3 scipy=0.18.1 matplotlib=2.0.0rc2 basemap=1.0.8.dev0 pillow=3.4.2 netcdf4=1.2.6'
 - CONDA_COMMAND='conda install -q --yes -c conda-forge gdal numpy scipy matplotlib basemap pillow netcdf4'

# Setup miniconda
before_install:
  - if [[ ! -e $HOME/miniconda/bin ]]; then
        wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
        chmod +x miniconda.sh;
        ./miniconda.sh -b -f -p $HOME/miniconda;
    fi
  - export OLD_PATH=$PATH
  - export PATH=$HOME/miniconda/bin:$PATH

install:
  - conda update -q --yes conda
  - eval $CONDA_COMMAND
  - conda install -q --yes -c conda-forge nose netcdf4 qt
  - export GDAL_DATA=/home/vagrant/miniconda/share/gdal/
  - export GEOS_DIR=/home/vagrant/miniconda/
  - python -c 'import gdal; print gdal.__file__'
  - python -c 'from mpl_toolkits.basemap import Basemap'
  - pip install coveralls
  - pip install cfunits
  - python setup.py install

script: #"cd ..; nosetests --with-coverage --cover-package=nansat nansat.tests"
  - coverage run --omit=nansat/mappers/*,nansat/tests/* --source=nansat setup.py test

after_success:
  - coveralls
  # Resetting path so uploading of cache with curl succeeds.
  - export PATH=$OLD_PATH

after_failure:
  # Resetting path so uploading of cache with curl succeeds.
  - export PATH=$OLD_PATH

# before_cache:
#   - rm -f $HOME/.cache/pip/log/debug.log

#cache:
#  directories:
#     - $HOME/.cache/pip
#    - $HOME/miniconda
